-- Sitemap Generator Database Schema
-- Run this in your Supabase SQL editor

-- Create the sitemaps table
CREATE TABLE IF NOT EXISTS public.sitemaps (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    website_url TEXT NOT NULL,
    device_type TEXT NOT NULL CHECK (device_type IN ('desktop', 'mobile', 'android', 'macbook')),
    sitemap_xml TEXT NOT NULL,
    urls_count INTEGER NOT NULL DEFAULT 0,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL
);

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS idx_sitemaps_website_url ON public.sitemaps(website_url);
CREATE INDEX IF NOT EXISTS idx_sitemaps_device_type ON public.sitemaps(device_type);
CREATE INDEX IF NOT EXISTS idx_sitemaps_created_at ON public.sitemaps(created_at DESC);

-- Enable Row Level Security (RLS)
ALTER TABLE public.sitemaps ENABLE ROW LEVEL SECURITY;

-- Create policy to allow public read access
CREATE POLICY "Allow public read access on sitemaps" ON public.sitemaps
    FOR SELECT USING (true);

-- Create policy to allow public insert access
CREATE POLICY "Allow public insert access on sitemaps" ON public.sitemaps
    FOR INSERT WITH CHECK (true);

-- Create function to update the updated_at timestamp
CREATE OR REPLACE FUNCTION public.handle_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = TIMEZONE('utc'::text, NOW());
    RETURN NEW;
END;
$$ language plpgsql;

-- Create trigger to automatically update the updated_at column
CREATE TRIGGER handle_sitemaps_updated_at
    BEFORE UPDATE ON public.sitemaps
    FOR EACH ROW
    EXECUTE FUNCTION public.handle_updated_at();

-- Create a view for sitemap statistics
CREATE OR REPLACE VIEW public.sitemap_stats AS
SELECT 
    COUNT(*) as total_sitemaps,
    COUNT(DISTINCT website_url) as unique_websites,
    device_type,
    AVG(urls_count) as avg_urls_per_sitemap,
    MAX(urls_count) as max_urls_per_sitemap,
    MIN(created_at) as first_sitemap_created,
    MAX(created_at) as last_sitemap_created
FROM public.sitemaps
GROUP BY device_type;

-- Grant access to the view
GRANT SELECT ON public.sitemap_stats TO anon, authenticated;

